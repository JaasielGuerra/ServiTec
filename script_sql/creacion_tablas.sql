-- MySQL Script generated by MySQL Workbench
-- mar 19 oct 2021 00:24:30
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_servitec
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_servitec
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_servitec` DEFAULT CHARACTER SET utf8 ;
USE `db_servitec` ;

-- -----------------------------------------------------
-- Table `db_servitec`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`rol` (
  `id_rol` INT NOT NULL AUTO_INCREMENT,
  `nombre_rol` VARCHAR(45) NOT NULL,
  `estado` INT NOT NULL,
  `generar_ordenes` INT NOT NULL,
  `atender_cobros` INT NOT NULL,
  `cobrar_servicios` INT NOT NULL,
  `control_usuarios` INT NOT NULL,
  `generar_reportes` INT NOT NULL,
  `graficas` INT NOT NULL,
  `servicios_tecnicos` INT NOT NULL,
  `inventario_repuestos` INT NOT NULL,
  `personal_tecnico` INT NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `user` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_rol` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_rol_idx` (`id_rol` ASC),
  CONSTRAINT `fk_usuario_rol`
    FOREIGN KEY (`id_rol`)
    REFERENCES `db_servitec`.`rol` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`tecnico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`tecnico` (
  `id_tecnico` INT NOT NULL AUTO_INCREMENT,
  `nombre_completo` VARCHAR(45) NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_tecnico`),
  INDEX `fk_tecnico_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_tecnico_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_servitec`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`categoria_servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`categoria_servicio` (
  `id_categoria_servicio` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_categoria_servicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`servicio` (
  `id_servicio` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `precio_a` DOUBLE NOT NULL,
  `precio_b` DOUBLE NOT NULL,
  `precio_c` DOUBLE NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_categoria_servicio` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_servicio`),
  INDEX `fk_servicio_categoria_servicio1_idx` (`id_categoria_servicio` ASC),
  INDEX `fk_servicio_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_servicio_categoria_servicio1`
    FOREIGN KEY (`id_categoria_servicio`)
    REFERENCES `db_servitec`.`categoria_servicio` (`id_categoria_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_servicio_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_servitec`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`prioridad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`prioridad` (
  `id_prioridad` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_prioridad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`motivo_orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`motivo_orden` (
  `id_motivo_orden` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_motivo_orden`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`estado_orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`estado_orden` (
  `id_estado_orden` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL COMMENT 'Las ordenes tendran los siguientes estado:\n\n- reservada\n- atendiendo\n- pendiente\n- finalizada\n- cobrada y entrada\n- solo entregada',
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_estado_orden`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`cliente` (
  `id_cliente` BIGINT NOT NULL AUTO_INCREMENT,
  `codigo_cliente` VARCHAR(45) NOT NULL,
  `nombre_cliente` VARCHAR(100) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `referencia` VARCHAR(150) NULL COMMENT 'alguna descripcion de referencia',
  `correo` VARCHAR(45) NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` TIME NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_cliente`),
  INDEX `fk_cliente_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_cliente_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_servitec`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`orden` (
  `id_orden` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha_maxima_entrega` DATE NULL COMMENT 'es la fecha maxima que se tiene para completar la orden',
  `fecha_ingreso` DATE NULL COMMENT 'fecha en la que el cliente lleva su aparato para realizar un servicio, es decir la fecha que se registra la orden',
  `fecha_entrega` DATE NULL COMMENT 'es la fecha en la que se hace la entrega del trabajo al cliente',
  `descripcion_orden` VARCHAR(255) NULL,
  `descripcion_recibido` VARCHAR(255) NULL COMMENT 'aqui se detalla lo que se ha recibido de parte del cliente, una tv, un aparato de sonido, describir las partes que se reciben',
  `imagen_referencia` VARCHAR(255) NULL COMMENT 'se guarda la ruta de una imagen que se guarda como referencia de lo que se recibe al momento de reservar la orden',
  `diagnostico_tecnico` VARCHAR(255) NULL COMMENT 'descripcion por parte del tecnico que atiende la orden de servicio',
  `aplicable` INT NULL COMMENT 'este campo define si la orden de servicio puede ser aplicada o no, esto lo hace el tecnico al momento de atender la orden\n\n1 = aplicable\n2 = no aplicable',
  `descripcion_extra` VARCHAR(255) NULL COMMENT 'si el tecnico hizo algo extra en la realizacion del servicio, debe indicarlo aqui',
  `costo_extra` DOUBLE NULL COMMENT 'aqui indica el tecnico algun costo extra de algo que pudo hacer durante el servicio tecnico',
  `total_costo_servicio` DOUBLE NULL COMMENT 'suma de todos los costos del servicio tecnico',
  `fecha_commit` DATE NULL,
  `hora_commit` DATE NULL,
  `id_tecnico` INT NOT NULL,
  `id_prioridad` INT NOT NULL,
  `id_estado_orden` INT NOT NULL,
  `id_motivo_orden` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `id_cliente` BIGINT NOT NULL,
  PRIMARY KEY (`id_orden`),
  INDEX `fk_orden_tecnico1_idx` (`id_tecnico` ASC),
  INDEX `fk_orden_prioridad1_idx` (`id_prioridad` ASC),
  INDEX `fk_orden_estado_orden1_idx` (`id_estado_orden` ASC),
  INDEX `fk_orden_motivo_orden1_idx` (`id_motivo_orden` ASC),
  INDEX `fk_orden_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_orden_cliente1_idx` (`id_cliente` ASC),
  CONSTRAINT `fk_orden_tecnico1`
    FOREIGN KEY (`id_tecnico`)
    REFERENCES `db_servitec`.`tecnico` (`id_tecnico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_prioridad1`
    FOREIGN KEY (`id_prioridad`)
    REFERENCES `db_servitec`.`prioridad` (`id_prioridad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_estado_orden1`
    FOREIGN KEY (`id_estado_orden`)
    REFERENCES `db_servitec`.`estado_orden` (`id_estado_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_motivo_orden1`
    FOREIGN KEY (`id_motivo_orden`)
    REFERENCES `db_servitec`.`motivo_orden` (`id_motivo_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_servitec`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_cliente1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `db_servitec`.`cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`fotos_diagnostico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`fotos_diagnostico` (
  `id_fotos_diagnostico` BIGINT NOT NULL AUTO_INCREMENT,
  `imagen` VARCHAR(255) NOT NULL,
  `descripcion` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL,
  `id_orden` BIGINT NOT NULL,
  PRIMARY KEY (`id_fotos_diagnostico`),
  INDEX `fk_fotos_diagnostico_orden1_idx` (`id_orden` ASC),
  CONSTRAINT `fk_fotos_diagnostico_orden1`
    FOREIGN KEY (`id_orden`)
    REFERENCES `db_servitec`.`orden` (`id_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`servicio_aplicado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`servicio_aplicado` (
  `id_servicio_aplicado` BIGINT NOT NULL AUTO_INCREMENT,
  `precio` DOUBLE NOT NULL,
  `cantidad` INT NOT NULL,
  `id_orden` BIGINT NOT NULL,
  `id_servicio` INT NOT NULL,
  PRIMARY KEY (`id_servicio_aplicado`),
  INDEX `fk_servicio_aplicado_orden1_idx` (`id_orden` ASC),
  INDEX `fk_servicio_aplicado_servicio1_idx` (`id_servicio` ASC),
  CONSTRAINT `fk_servicio_aplicado_orden1`
    FOREIGN KEY (`id_orden`)
    REFERENCES `db_servitec`.`orden` (`id_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_servicio_aplicado_servicio1`
    FOREIGN KEY (`id_servicio`)
    REFERENCES `db_servitec`.`servicio` (`id_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`estante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`estante` (
  `id_estante` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `numero` INT NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_estante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`ubicacion` (
  `id_ubicacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_ubicacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`caja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`caja` (
  `id_caja` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `numero` INT NOT NULL,
  `estado` INT NOT NULL,
  PRIMARY KEY (`id_caja`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`inventario_repuesto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`inventario_repuesto` (
  `id_inventario_repuesto` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `precio` DOUBLE NOT NULL,
  `existencia` INT NOT NULL,
  `estado` INT NOT NULL,
  `fecha_commit` DATE NOT NULL,
  `hora_commit` DATE NOT NULL,
  `id_estante` INT NOT NULL,
  `id_ubicacion` INT NOT NULL,
  `id_caja` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_inventario_repuesto`),
  INDEX `fk_inventario_repuesto_estante1_idx` (`id_estante` ASC),
  INDEX `fk_inventario_repuesto_ubicacion1_idx` (`id_ubicacion` ASC),
  INDEX `fk_inventario_repuesto_caja1_idx` (`id_caja` ASC),
  INDEX `fk_inventario_repuesto_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_inventario_repuesto_estante1`
    FOREIGN KEY (`id_estante`)
    REFERENCES `db_servitec`.`estante` (`id_estante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventario_repuesto_ubicacion1`
    FOREIGN KEY (`id_ubicacion`)
    REFERENCES `db_servitec`.`ubicacion` (`id_ubicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventario_repuesto_caja1`
    FOREIGN KEY (`id_caja`)
    REFERENCES `db_servitec`.`caja` (`id_caja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventario_repuesto_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `db_servitec`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_servitec`.`repuesto_empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_servitec`.`repuesto_empleado` (
  `id_repuesto_empleado` BIGINT NOT NULL AUTO_INCREMENT,
  `precio` DOUBLE NOT NULL,
  `cantidad` INT NOT NULL,
  `id_orden` BIGINT NOT NULL,
  `id_inventario_repuesto` BIGINT NOT NULL,
  PRIMARY KEY (`id_repuesto_empleado`),
  INDEX `fk_repuesto_empleado_orden1_idx` (`id_orden` ASC),
  INDEX `fk_repuesto_empleado_inventario_repuesto1_idx` (`id_inventario_repuesto` ASC),
  CONSTRAINT `fk_repuesto_empleado_orden1`
    FOREIGN KEY (`id_orden`)
    REFERENCES `db_servitec`.`orden` (`id_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_repuesto_empleado_inventario_repuesto1`
    FOREIGN KEY (`id_inventario_repuesto`)
    REFERENCES `db_servitec`.`inventario_repuesto` (`id_inventario_repuesto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
